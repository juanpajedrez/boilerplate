git status
cd ..
git status
cd website
cd client
mkdir assets
cd assets
mkdir assets
mkdir images
ls --color=auto
cd images
touch background.jpg
cd ..
cd ..
cd ..
cd ..
cd website
ls --color=auto
cd client
cd assets
cd images
cd ../../..
cd images
ls --color=auto
mv header.png ..
ls --color=auto
cd ..
ls --color=auto
mv header.png client/assets/images
find
find images
find -name header.png
find -name images
mv header.png client/assets/images
find -name header.png
find -name footer.jpeg
mv ./client/assets/images/header.png client/assets/images
mv ./images/footer.jpeg client/assets/images
find images
find
rmdir images
rm images/background.jpg
rmdir images
ls --color=auto
mkdir client/assets/icons
mv CodeAlly.svg client/assets/icons/
find
mv CodeRoad client/assets/icons/
mv CodeRoad.svg client/assets/icons/
mv freeCodeCamp.svg client/assets/icons/
find
mkdir client/assets/fonts
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find -name client/assets/fonts
find client/assets/fonts
touch client/assets/fonts/lato-bold.ttg
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find
rmdir fonts
rmdir --help
rmdir fonts --ignore-fail-on-non-empty
rm --help
rm -r fonts
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
echo yay!
echo Yay!
echo I finished the boilerplate!
echo one more thing..
echo one more thing...
echo I made this boilerplate >> README.md
more README.md
echo from the command line >> README.md
more README.md
echo for the freeCodeCamp bash lessons >> README.md
more README.md
cd ..
ls --color=auto
git add --all
mv website website-boilerplate
find website-boilerplate
ls --color=auto
cd website-boilerplate/
ls --color=auto
ls --color=auto
cd ..
ls --color=auto
ls --color=auto
ls --color=auto
ls --color=auto
cp --help
cp -r website-boilerplate toms-website
ls --color=auto
find toms-website
find website-boilerplate
clear
echo goodbye terminal
exit
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git status
git add --all
